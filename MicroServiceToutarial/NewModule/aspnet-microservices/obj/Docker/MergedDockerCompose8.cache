name: dockercompose1045795868437235179
services:
  basket.api:
    build:
      context: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices
      dockerfile: Services/Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
    image: basketapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8002"
      protocol: tcp
  basketdb:
    container_name: basketdb
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    restart: always
  catalog.api:
    build:
      context: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices
      dockerfile: Services/Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
    image: catalogapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  discountdb:
    container_name: basketdb
    environment:
      POSTGRES_DB: DiscountDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib?postgressql/data
      volume: {}
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: mohadmmedenbah93@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Mohammed1993$$
      POSTGRES_DB: DiscountDb
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5050"
      protocol: tcp
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib?postgressql/data
      volume: {}
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8000
      published: "8000"
      protocol: tcp
    - mode: ingress
      target: 9000
      published: "9000"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
    - type: volume
      source: portainer_data
      target: /data portainer/portainer-ce
      volume: {}
networks:
  default:
    name: dockercompose1045795868437235179_default
volumes:
  mongo_data:
    name: dockercompose1045795868437235179_mongo_data
  portainer_data:
    name: dockercompose1045795868437235179_portainer_data
  postgres_data:
    name: dockercompose1045795868437235179_postgres_data