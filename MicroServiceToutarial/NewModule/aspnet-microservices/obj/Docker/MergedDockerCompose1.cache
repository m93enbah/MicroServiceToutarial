name: dockercompose1045795868437235179
services:
  basket.api:
    build:
      context: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices
      dockerfile: Services/Basket.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Basket.API
      target: base
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      CacheSettings:ConnectionString: basketdb:6379
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: basketapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/Basket.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8002"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices\Services\Basket.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  basketdb:
    container_name: basketdb
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    restart: always
  catalog.api:
    build:
      context: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices
      dockerfile: Services/Catalog.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.API
      target: base
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
      NUGET_FALLBACK_PACKAGES: ""
    image: catalogapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/Catalog.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices\Services\Catalog.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Study\MicroServiceToutarial\NewModule\aspnet-microservices
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\m.enbeh\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8000
      published: "8000"
      protocol: tcp
    - mode: ingress
      target: 9000
      published: "9000"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
    - type: volume
      source: portainer_data
      target: /data portainer/portainer-ce
      volume: {}
networks:
  default:
    name: dockercompose1045795868437235179_default
volumes:
  mongo_data:
    name: dockercompose1045795868437235179_mongo_data
  portainer_data:
    name: dockercompose1045795868437235179_portainer_data